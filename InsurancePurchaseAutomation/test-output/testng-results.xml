<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="RegressionSuite" duration-ms="131257" started-at="2022-01-08T00:40:27 IST" finished-at="2022-01-08T00:42:39 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="131257" started-at="2022-01-08T00:40:27 IST" finished-at="2022-01-08T00:42:39 IST">
      <class name="com.policybazaar.regression.CarInsurance">
        <test-method status="PASS" signature="setDriver()[pri:0, instance:com.policybazaar.regression.CarInsurance@17695df3]" name="setDriver" is-config="true" duration-ms="7505" started-at="2022-01-08T00:41:47 IST" finished-at="2022-01-08T00:41:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDriver -->
        <test-method status="PASS" signature="searchForCarInsurance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.policybazaar.regression.CarInsurance@17695df3]" name="searchForCarInsurance" duration-ms="16981" started-at="2022-01-08T00:41:54 IST" data-provider="Car-Details" finished-at="2022-01-08T00:42:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[CHENNAI]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TN03]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[CHEVROLET]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[BEAT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Petrol]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1.2 LT (1199 cc)]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Brand New Car]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Sam]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[sam@gail.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[987654]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForCarInsurance -->
        <test-method status="FAIL" signature="searchForCarInsurance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.policybazaar.regression.CarInsurance@17695df3]" name="searchForCarInsurance" duration-ms="26270" started-at="2022-01-08T00:42:11 IST" data-provider="Car-Details" finished-at="2022-01-08T00:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[DELHI]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DL10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[FORD]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ECOSPORT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Petrol]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1.5 Petrol Titanium  (1497 cc)]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Brand New Car]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[8765432109]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with locator By.linkText: Proceed without car number
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'DESKTOP-9QHAP3G', ip: '192.168.0.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with locator By.linkText: Proceed without car number
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'DESKTOP-9QHAP3G', ip: '192.168.0.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:383)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:375)
at com.policybazaar.pageobjectmodel.CarInsuranceEntryPage.withoutcarno(CarInsuranceEntryPage.java:120)
at com.policybazaar.regression.CarInsurance.carNumber(CarInsurance.java:96)
at com.policybazaar.regression.CarInsurance.searchForCarInsurance(CarInsurance.java:83)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForCarInsurance -->
        <test-method status="FAIL" signature="searchForCarInsurance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.policybazaar.regression.CarInsurance@17695df3]" name="searchForCarInsurance" duration-ms="11" started-at="2022-01-08T00:42:38 IST" data-provider="Car-Details" finished-at="2022-01-08T00:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[PUNE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MH12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[JEEP]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[WRANGLER]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Petrol]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Rubicon (1998 cc)]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Brand New Car]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Joseph]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[joseph@gmail.com]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=97.0.4692.71)
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'DESKTOP-9QHAP3G', ip: '192.168.0.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7b2a47eff304aee864c7a9d364a92bc9, findElement {using=xpath, value=//div[@class='prd-block'][4]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 97.0.4692.71, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\maina\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50192}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50192/devtoo..., se:cdpVersion: 97.0.4692.71, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 7b2a47eff304aee864c7a9d364a92bc9]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=97.0.4692.71)
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'DESKTOP-9QHAP3G', ip: '192.168.0.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7b2a47eff304aee864c7a9d364a92bc9, findElement {using=xpath, value=//div[@class='prd-block'][4]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 97.0.4692.71, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\maina\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50192}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50192/devtoo..., se:cdpVersion: 97.0.4692.71, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 7b2a47eff304aee864c7a9d364a92bc9
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:383)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:375)
at com.policybazaar.pageobjectmodel.HomePage.carInsurance(HomePage.java:354)
at com.policybazaar.regression.CarInsurance.searchForCarInsurance(CarInsurance.java:78)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForCarInsurance -->
        <test-method status="PASS" signature="quitBrowser()[pri:0, instance:com.policybazaar.regression.CarInsurance@17695df3]" name="quitBrowser" is-config="true" duration-ms="1070" started-at="2022-01-08T00:42:38 IST" finished-at="2022-01-08T00:42:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- com.policybazaar.regression.CarInsurance -->
      <class name="com.policybazaar.extentreports.ExtentReport">
        <test-method status="PASS" signature="startReport()[pri:0, instance:com.policybazaar.extentreports.ExtentReport@5f71c76a]" name="startReport" is-config="true" duration-ms="578" started-at="2022-01-08T00:40:27 IST" finished-at="2022-01-08T00:40:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="flushReport()[pri:0, instance:com.policybazaar.extentreports.ExtentReport@5f71c76a]" name="flushReport" is-config="true" duration-ms="641" started-at="2022-01-08T00:42:39 IST" finished-at="2022-01-08T00:42:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- com.policybazaar.extentreports.ExtentReport -->
      <class name="com.policybazaar.regression.TravelInsurance">
        <test-method status="PASS" signature="setDriver()[pri:0, instance:com.policybazaar.regression.TravelInsurance@71d15f18]" name="setDriver" is-config="true" duration-ms="10684" started-at="2022-01-08T00:40:27 IST" finished-at="2022-01-08T00:40:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDriver -->
        <test-method status="PASS" signature="searchForTravelInsurance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.policybazaar.regression.TravelInsurance@71d15f18]" name="searchForTravelInsurance" duration-ms="18532" started-at="2022-01-08T00:40:40 IST" data-provider="Travel-Details" finished-at="2022-01-08T00:40:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[United Kingdom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1/25/22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2/1/22]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[9874561230]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForTravelInsurance -->
        <test-method status="PASS" signature="searchForTravelInsurance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.policybazaar.regression.TravelInsurance@71d15f18]" name="searchForTravelInsurance" duration-ms="22719" started-at="2022-01-08T00:40:59 IST" data-provider="Travel-Details" finished-at="2022-01-08T00:41:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Germany]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5/8/22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6/3/22]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[96543210]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForTravelInsurance -->
        <test-method status="PASS" signature="searchForTravelInsurance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.policybazaar.regression.TravelInsurance@71d15f18]" name="searchForTravelInsurance" duration-ms="16935" started-at="2022-01-08T00:41:21 IST" data-provider="Travel-Details" finished-at="2022-01-08T00:41:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[France]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3/22/22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4/7/22]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[No]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[9638527413]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForTravelInsurance -->
        <test-method status="PASS" signature="searchForTravelInsurance(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.policybazaar.regression.TravelInsurance@71d15f18]" name="searchForTravelInsurance" duration-ms="7360" started-at="2022-01-08T00:41:38 IST" data-provider="Travel-Details" finished-at="2022-01-08T00:41:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netherlands]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1/2/22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3/26/22]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Yes]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[7439517890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForTravelInsurance -->
        <test-method status="PASS" signature="quitBrowser()[pri:0, instance:com.policybazaar.regression.TravelInsurance@71d15f18]" name="quitBrowser" is-config="true" duration-ms="897" started-at="2022-01-08T00:41:46 IST" finished-at="2022-01-08T00:41:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- com.policybazaar.regression.TravelInsurance -->
    </test> <!-- Test -->
  </suite> <!-- RegressionSuite -->
</testng-results>
